services:
  chat:
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    links:
      - postgres
    build:
      context: .
      dockerfile: Dockerfile
      target: chat
    ports:
      - ${CHAT_PORT}:80
    restart: no
    environment:
      PYTHONOPTIMIZE: ${PYTHONOPTIMIZE:-2}
      DEBUG_LOGGING: ${DEBUG_LOGGING}
      CHAINLIT_AUTH_SECRET: ${CHAINLIT_AUTH_SECRET}
      CHAT_PASSWORD: ${CHAT_PASSWORD}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_SSLMODE: ${POSTGRES_SSLMODE:-prefer}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  migrations:
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
    build:
      context: .
      dockerfile: Dockerfile
      target: migrations
    restart: no
    environment:
      PYTHONOPTIMIZE: ${PYTHONOPTIMIZE:-2}
      DEBUG_LOGGING: ${DEBUG_LOGGING}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SSLMODE: ${POSTGRES_SSLMODE:-prefer}

  postgres:
    image: postgres:16.3-alpine3.20
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}"]
      interval: 10s
      start_period: 10s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
